[versions]
kotlin = "1.9.22"
kotlin-gradle-plugin = "1.9.20"

spring-boot-version = "3.2.1"
spring-dep-management-version = "1.1.4"
spring-security-crypto-version = "6.2.1"
spring-cloud-version = '2023.0.0'

springdoc-openapi-version = "2.3.0"

exposed-version = "0.46.0"

postgresql-driver-version = "42.7.1"

org-apache-log4j-kotlin-version = "1.3.0"

[libraries]
jetbrains-kotlin-gradle-plugin = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin", version.ref = "kotlin-gradle-plugin" }
jetbrains-kotlin-reflect = { module = "org.jetbrains.kotlin:kotlin-reflect", version.ref = "kotlin" }

spring-boot-starter-web = { module = "org.springframework.boot:spring-boot-starter-web" }
spring-boot-starter-web-flux = { module = "org.springframework.boot:spring-boot-starter-webflux" }
spring-boot-starter-validation = { module = "org.springframework.boot:spring-boot-starter-validation" }
spring-boot-starter-data-redis = { module = "org.springframework.boot:spring-boot-starter-data-redis" }
spring-boot-starter-security = { module = "org.springframework.boot:spring-boot-starter-security" }
spring-security-crypto = { module = "org.springframework.security:spring-security-crypto" }

spring-cloud-bom = { module = "org.springframework.cloud:spring-cloud-dependencies", version.ref = "spring-cloud-version" }
spring-cloud-starter-config = { module = "org.springframework.cloud:spring-cloud-starter-config" }
spring-cloud-starter-openfeign = { module = "org.springframework.cloud:spring-cloud-starter-openfeign" }
spring-cloud-starter-gateway = { module = "org.springframework.cloud:spring-cloud-starter-gateway" }
spring-cloud-starter-eureka-client = { module = "org.springframework.cloud:spring-cloud-starter-netflix-eureka-client" }
spring-cloud-starter-eureka-server = { module = "org.springframework.cloud:spring-cloud-starter-netflix-eureka-server" }

springdoc-openapi-starter-webmvc-ui = { module = "org.springdoc:springdoc-openapi-starter-webmvc-ui", version.ref = "springdoc-openapi-version" }
springdoc-openapi-starter-webflux-ui = { module = "org.springdoc:springdoc-openapi-starter-webflux-ui", version.ref = "springdoc-openapi-version" }

redis-client-jedis = { module = "redis.clients:jedis", version = "5.1.0" }

exposed-starter = { module = "org.jetbrains.exposed:exposed-spring-boot-starter", version.ref = "exposed-version" }
exposed-java-time = { module = "org.jetbrains.exposed:exposed-java-time", version.ref = "exposed-version" }

postgesql-driver = { module = "org.postgresql:postgresql", version.ref = "postgresql-driver-version" }

org-apache-log4j-kotlin = { module = "org.apache.logging.log4j:log4j-api-kotlin", version.ref = "org-apache-log4j-kotlin-version" }

[plugins]
spring-boot = { id = "org.springframework.boot", version.ref = "spring-boot-version" }
spring-dep-management = { id = "io.spring.dependency-management", version.ref = "spring-dep-management-version" }

kotlin-spring = { id = "org.jetbrains.kotlin.plugin.spring", version.ref = "kotlin" }